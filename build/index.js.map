{"version":3,"file":"index.js","mappings":"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","sources":["webpack://pbrocks-block-starter/./src/blocks/index.js","webpack://pbrocks-block-starter/./src/blocks/pbrocks-container/index.js","webpack://pbrocks-block-starter/./src/filters/code-for-pbrocks/index.js","webpack://pbrocks-block-starter/./src/filters/index.js","webpack://pbrocks-block-starter/external window [\"wp\",\"blockEditor\"]","webpack://pbrocks-block-starter/external window [\"wp\",\"blocks\"]","webpack://pbrocks-block-starter/external window [\"wp\",\"components\"]","webpack://pbrocks-block-starter/external window [\"wp\",\"compose\"]","webpack://pbrocks-block-starter/external window [\"wp\",\"element\"]","webpack://pbrocks-block-starter/external window [\"wp\",\"hooks\"]","webpack://pbrocks-block-starter/external window [\"wp\",\"i18n\"]","webpack://pbrocks-block-starter/webpack/bootstrap","webpack://pbrocks-block-starter/webpack/runtime/compat get default export","webpack://pbrocks-block-starter/webpack/runtime/define property getters","webpack://pbrocks-block-starter/webpack/runtime/hasOwnProperty shorthand","webpack://pbrocks-block-starter/webpack/runtime/make namespace object","webpack://pbrocks-block-starter/./src/index.js"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport './pbrocks-container';\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tregisterBlockType,\n} from '@wordpress/blocks';\n\nimport {\n\tInnerBlocks\n} from '@wordpress/block-editor';\n\nregisterBlockType( 'pbrocks-block-starter/container', {\n\ttitle: __( 'Starter Container', 'pbrocks-block-starter' ),\n\n\tdescription: __( 'Provide custom container.' ),\n\n\tkeywords: [\n\t\t__( 'container' ),\n\t\t__( 'wrapper' ),\n\t\t__( 'section' ),\n\t],\n\n\tsupports: {\n\t\talign: [ 'wide', 'full' ],\n\t\tanchor: true,\n\t\thtml: false,\n\t},\n\n\tcategory: 'pbrocks-block-starter',\n\n\ticon: {\n\t\tbackground: '#29c8aa',\n\t\tforeground: '#ffffff',\n\t\tsrc: 'editor-kitchensink'\n\t},\n\n\tattributes: {\n\t\tcontent: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\tedit: ( props ) => {\n\t\tconst { className } = props;\n\n\t\treturn (\n\t\t\t<div className={ className }>\n\t\t\t\t<InnerBlocks renderAppender={ InnerBlocks.ButtonBlockAppender } />\n\t\t\t</div>\n\t\t);\n\t},\n\n\tsave: ( props ) => {\n\t\tconst { className } = props;\n\n\t\treturn (\n\t\t\t<div className={ className }>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\t\t);\n\t},\n} );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\taddFilter,\n} from '@wordpress/hooks';\n\nimport {\n\tFragment,\n} from '@wordpress/element';\n\nimport {\n    InspectorControls,\n} from '@wordpress/block-editor';\n\nimport {\n    createHigherOrderComponent,\n    withState\n} from '@wordpress/compose';\n\nimport {\n    Panel,\n    PanelBody,\n    PanelRow,\n    TextControl,\n    ToggleControl,\n} from '@wordpress/components';\n\nimport classnames from 'classnames';\n\naddFilter(\n    'blocks.registerBlockType',\n    'pbrocks-block-starter/add-code-attributes',\n    addCodeAttributes\n);\n\naddFilter(\n    'editor.BlockEdit',\n    'pbrocks-block-starter/add-code-inspector-controls',\n    addCodeInspectorControls\n);\n\naddFilter(\n    'blocks.getSaveElement',\n    'pbrocks-block-starter/modify-code-save-settings',\n    modifyCodeSaveSettings\n);\n\nfunction addCodeAttributes(settings, name) {\n\tif ('core/code' !== name) return settings;\n\n\tsettings.title = __( 'PBrocks Code', 'pbrocks-block-starter');\n\n\tsettings.description = __(\n\t\t'PBrocks Code is used when you want code to be unparsed, ie displayed as written',\n\t\t'pbrocks-block-starter'\n\t);\n\n\tsettings.supports = lodash.merge({}, settings.supports, {\n\t\talign: ['full', 'wide']\n\t});\n\tsettings.attributes.align = {\n\t\ttype: 'string',\n\t\tdefault: 'full'\n\t};\n\tsettings.attributes.highContrast = {\n\t\ttype: 'boolean',\n\t\tdefault: false\n\t};\n\treturn settings;\n}\n\nconst MyTextControl = withState( {\n    className: 'pbrocks-css',\n} )( ( { className, setState } ) => ( \n    <TextControl\n        label=\"Add PBrocks CSS Class\"\n        value={ className }\n        onChange={ ( className ) => setState( { className } ) }\n    />\n) );\nfunction addCodeInspectorControls(BlockEdit) {\n    const withInspectorControls = createHigherOrderComponent(BlockEdit => {\n        return props => {\n            if ('core/code' !== props.name) {\n                return <BlockEdit {...props} />;\n            }\n\n            return (\n            <Fragment>\n                <div\n                className={classnames({\n                    'high-contrast': props.attributes.highContrast\n                })}\n                >\n                <BlockEdit {...props} />\n                </div>\n                <InspectorControls>\n                    <PanelBody\n                        title={\n                            __('PBrocks Code Settings', 'pbrocks-block-starter')\n                        }\n                        icon=\"welcome-widgets-menus\"\n                        initialOpen={ true }\n                        >\n                        <PanelRow>\n                            <MyTextControl />\n                        </PanelRow>\n                        <PanelRow>\n                            <ToggleControl\n                                label={__('High Contrast', 'pbrocks-block-starter')}\n                                checked={props.attributes.highContrast}\n                                onChange={highContrast => props.setAttributes({ highContrast })}\n                            />\n                        </PanelRow>\n                    </PanelBody>\n                </InspectorControls>\n            </Fragment>\n            );\n        };\n    });\n    return withInspectorControls(BlockEdit);\n}\n\nfunction modifyCodeSaveSettings(el, block, attributes) {\n    if ('core/code' === block.name && attributes.highContrast) {\n        el.props.className = classnames(el.props.className, {\n            'high-contrast': attributes.highContrast\n        });\n    }\n    return el;\n}\n","/**\n * Internal dependencies\n */\n\nimport './code-for-pbrocks';\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Internal dependencies\n */\n\nimport './blocks';\nimport './filters';\n"],"names":["__","registerBlockType","InnerBlocks","title","description","keywords","supports","align","anchor","html","category","icon","background","foreground","src","attributes","content","type","edit","props","className","ButtonBlockAppender","save","addFilter","Fragment","InspectorControls","createHigherOrderComponent","withState","Panel","PanelBody","PanelRow","TextControl","ToggleControl","classnames","addCodeAttributes","addCodeInspectorControls","modifyCodeSaveSettings","settings","name","lodash","merge","default","highContrast","MyTextControl","setState","BlockEdit","withInspectorControls","setAttributes","el","block"],"sourceRoot":""}